version: '3'
networks: 
  IOT-DMS:
services:
  emqx:
    image: emqx/emqx
    container_name: emqx
    ports:
      - 1883:1883
      - 8083:8083 
      - 8883:8883
      - 8084:8084
      - 18083:18083
    volumes:
    - ./emqx/conf/emqx.conf:/etc/emqx/emqx.conf
    - ./emqx/conf/acl.conf:/etc/emqx/acl.conf
    - vol-emqx-data:/opt/emqx/data
    - vol-emqx-etc:/opt/emqx/etc
    - vol-emqx-log:/opt/emqx/log
    - ./daemon.json:/etc/docker/daemon.json
    env_file:
    - local_envs.env
    networks:
    - IOT-DMS
    restart: on-failure
  pushgateway:
    image: prom/pushgateway
    container_name: pushgateway
    ports:
    - 9091:9091
    networks:
    - IOT-DMS
    depends_on:
    - emqx
  postgres:
    container_name: postgres
    build: ./database
    environment:
      PGDATA: /var/lib/postgresql/data/pgdata
    volumes:
    - progresDB_data:/var/lib/postgresql/data
    - ./database/postgres.conf:/database/config/postgres.conf
    env_file:
    - local_envs.env
    networks:
    - IOT-DMS
    restart: on-failure
  webserver:
    image: server:latest
    container_name: webserver
    build: .
    ports:
    - 8081:8081
    depends_on:
    - emqx
    - postgres
    env_file:
    - local_envs.env
    networks:
    - IOT-DMS
    restart: on-failure
  grafana:
    image: grafana/grafana
    container_name: grafana
    ports:
    - 3000:3000
    links:
    - postgres:postgres
    volumes:
    - grafana-storage:/var/lib/grafana
    depends_on:
    - postgres
    - emqx
    networks:
    - IOT-DMS
    #restart: always
  prometheus:
    build: ./prometheus
    container_name: prometheus
    ports:
    - 9094:9090
    command:
    - --config.file=/etc/prometheus/prometheus.yml
    - '--storage.tsdb.path=/prometheus'
    - '--web.console.libraries=/etc/prometheus/console_libraries'
    - '--web.console.templates=/etc/prometheus/consoles'
    - '--web.enable-lifecycle'
    volumes:
    - prometheus-data:/prometheus
    - ./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
    networks:
    - IOT-DMS
    depends_on:
    - cadvisor
    - postgres
    - webserver
    - emqx
  cadvisor:
    image: gcr.io/cadvisor/cadvisor:latest
    container_name: cadvisor
    ports: 
    - 8080:8080
    volumes:
    - /:/rootfs:ro
    - /var/run:/var/run:rw
    - /sys:/sys:ro
    - /var/lib/docker/:/var/lib/docker:ro
    networks:
    - IOT-DMS
    depends_on:
    - postgres
    - webserver
  #alertmanager:
   # image: prom/alertmanager
    #container_name: alertmanger
   # ports:
    #- 9093:9093
    #volumes:
    #- /prometheus/alertmanager.yml:/etc/alertmanager/alermanage.yml 
    #networks: 
   # - IOT-DMS
  jenkins:
    image: jenkins/jenkins
    container_name: jenkins
    ports:
    - 8082:8080
    - 50000:50000
    volumes:
    - jenkins_home:/var/jenkins_home
    networks:
    - IOT-DMS
  zookeeper:
    container_name: zookeeper
    restart: always
    image: "zookeeper:3.8"
    ports: 
    - 2181:2181
    env_file:
    - local_envs.env
    networks:
    - IOT-DMS
  kafka:
    container_name: kafka
    restart: always
    image: wurstmeister/kafka
    depends_on:
    - zookeeper
    ports:
    - 9092:9092
    env_file:
    - local_envs.env
    volumes:
    - ~/.tb-mqtt-broker-data/kafka:/kafka
    - /var/run/docker.sock:/var/run/docker.sock
    networks:
    - IOT-DMS
 # tbmq:
  #  container_name: tbmq
  #  restart: on-failure
  #  image: thingsboard/tbmq:1.2.0
  #  depends_on:
  #  - postgres
  #  - kafka
  #  ports:
  #  - "8089:8083"
  #  - "1889:1883"
  #  env_file:
  #  - local_envs.env
  #  volumes:
  #  - tb-data-log:/var/log/thingsboard-mqtt-broker
  #  - tb-data-data:/data
  #  networks:
  #  - IOT-DMS
  mytb:
    image: thingsboard/tb-postgres
    container_name: mytb
    ports:
    - 9090:9090
    - 1886:1883
    - 7070:7070
    - 5683-5688:5683-5688/udp
    env_file:
    - local_envs.env
    volumes:
    - mytb-data:/data
    - mytb-logs:/var/log/thingsboard
    networks:
    - IOT-DMS
    depends_on:
    - kafka
volumes:
  grafana-storage: {}
  progresDB_data: {}
  prometheus-data:
  vol-emqx-data:
  vol-emqx-etc:
  vol-emqx-log:
  jenkins_home: {}
  tb-data-log: 
  tb-data-data:
  mytb-data:
    external: true
  mytb-logs:
    external: true
  #.tb-mqtt-broker-data:
