def gv 
CODE_CHANGES = getGitChanges()
pipeline {
    agent any
    environment{

    }
    parameters {
       // DOCKER_REGIS = credentials('docker-regis')
    }

    stages {
        stage('init') { 
            steps {
                script {
                    gv = load "script.groovy"
                }
            }
        }
        stage('clonegit') 
            steps {
                withCredentials([
                    usernamePassword(credentials: 'docker-regis', usernameVariable: USER, passwordVariable: PWD)
                ]) {
                    sh '''
                        docker login -u ${USER} -p ${PWD}
                    '''
                }
            }
        stage('Build') {
            steps {
                script {
                    gv.buildServices()
                }
            }
        }
        stage('Push') {
            steps {
                script {
                    gv.pushServices()
                }
            }
        }
        stage('Deploy') {
            steps {
                when {
                    expression {
                        BRANCH_NAME == 'master' && CODE_CHANGES == true
                    }
                }
                script { 
                    gv.deployServices()
                }
            }
        }
    }

}